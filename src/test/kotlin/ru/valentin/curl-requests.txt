Вложения
curl -s -v -X POST \
  http://localhost:8080/api/tasks/1/attachment \
  -H "Content-Type: multipart/form-data" \
  -F "file=@./att"

curl -s -v -X GET \
  "http://localhost:8080/api/tasks/1/attachment/download" \
  -H "Accept: application/octet-stream, application/json" \
    --output "output_file" \
  -w "\nHTTP Status: %{http_code}\nContent-Type: %{content_type}\n"

curl -s -v -X DELETE \
  "http://localhost:8080/api/tasks/1/attachment" \
  -H "Accept: application/json" \
  -w "\nHTTP Status: %{http_code}\nContent-Type: %{content_type}\n"

curl -s -v -X GET \
"http://localhost:8080/api/task-types%D1%8B%D1%8B" \
  -w "\nHTTP Status: %{http_code}\nContent-Type: %{content_type}\n"

curl -s -v -X GET \
  "http://localhost:8080/api/tasks/by-date?date=2025-08-20&pag%D0%B9%D1%86%D1%83e=0&siqqze=1&soqqrt=desc" \
  -w "\nHTTP Status: %{http_code}\nContent-Type: %{content_type}\n"

curl -s -v -X GET \
  "http://localhost:8080/api/tasks/1000" \
   -w "\nHTTP Status: %{http_code}\nContent-Type: %{content_type}\n"

1. Создание новой задачи.

Загрузка файла-вложения для задачи и его получение по идентификатору
задачи (хранить его как файл в директории на сервере).
2. Изменение существующей задачи
3. Удаление задачи по идентификатору
4. Получение тега по идентификатору с задачами, сортированными по приоритету
5. Получение всех тегов, у которых есть задачи
6. Создание нового тега
7. Изменение существующего тега
8. Удаление тега по идентификатору (вместе с его задачами)
9. Получение списка типов задач с уровнем приоритета
10. Получение списка задач за заданную дату с сортировкой по уровню приоритета